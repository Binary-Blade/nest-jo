# Define the base image and tag to be used across all build stages.
ARG IMAGE=node:18.19.0-alpine

# == COMMON STAGE ==
# This stage installs all dependencies and copies your application code.
FROM $IMAGE as builder
WORKDIR /app

# Copying package files first to leverage Docker cache
COPY package.json pnpm-lock.yaml ./

# Install pnpm globally and install dependencies
RUN npm install -g pnpm && \
    pnpm install

# Copy the rest of the application code
COPY . .

# Build the application
RUN pnpm run build

# Verify build output and prune development dependencies
RUN ls -la /app/dist && \
    pnpm prune --production

# == PRODUCTION STAGE ==
# This stage sets up the production environment.
FROM $IMAGE as production

# Copy built files and node_modules from builder stage
COPY --chown=node:node --from=builder /app/dist ./dist
COPY --chown=node:node --from=builder /app/node_modules ./node_modules
# Copy the .env file into the container.
COPY --chown=node:node --from=builder /app/.prod.env /app/.env

EXPOSE 3000

# Specify the entry point
ENTRYPOINT ["node", "./dist/main.js"]
CMD [""]
# Set the user to the node user.
 USER node
