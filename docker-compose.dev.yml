version: '3.9'

services:
# SERVER - NESTJS
# Setup the NestJS server service.
  server:
    container_name: server-jo-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: dev
    working_dir: /app
    env_file:
      - .dev.env
    ports:
      - "3000:3000"
    networks:
      - app 
    depends_on:
      - postgres
      - redis
    command: [sh, -c, 'pnpm run start:dev']
    volumes:
      - .:/app:delegated

# DATABASE - POSTGRESQL
# Setup the PostgreSQL database service
  postgres:
    container_name: postgres-jo-dev
    image: postgres:16-alpine
    env_file:
      - .dev.env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME} 
    restart: always
    ports:
      - 5432:5432
    volumes:
      - type: volume
        source: pg-data-dev
        target: /var/lib/postgresql/data
    networks:
      - app

# REDIS - CACHE
# Setup the Redis cache service.
  redis:
    container_name: redis-jo-dev
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    env_file:
      - .dev.env
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379" 
    networks:
      - app
    volumes:
      - type: volume
        source: redis-data-dev
        target: /data

  # API GATEWAY - NGINX
  nginx:
    container_name: nginx-jo-dev
    image: nginx:alpine
    ports:
      - "443:443"   # If active HTTPS, also add "443:443"
      - "80:80"
    depends_on:
      - server
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
      - ./nginx/localhost+2.pem:/etc/nginx/ssl/localhost+2.pem
      - ./nginx/localhost+2-key.pem:/etc/nginx/ssl/localhost+2-key.pem
      # - ./certbot/conf:/etc/letsencrypt
      # - ./certbot/www:/var/www/certbot
    networks:
      - app

  # certbot:
  #   container_name: certbot-dev
  #   image: certbot/certbot
  #   volumes:
  #     - ./certbot/www:/var/www/certbot
  #     - ./certbot/conf:/etc/letsencrypt
  #   command: certonly --webroot --webroot-path=/var/www/certbot --keep-until-expiring --agree-tos --no-eff-email --email ${CERTBOT_EMAIL} -d ${CERTBOT_DOMAIN} 
  #   networks:
  #     - app

networks: 
  app:

volumes:
  pg-data-dev:  # PERSISTENT VOLUME : db-postgres 
  redis-data-dev: # PERSISTENT VOLUME : redis-cache 
